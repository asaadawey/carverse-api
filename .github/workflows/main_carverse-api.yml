# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Stage CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
env:
  REGISTRY_PATH: ${{ github.workspace }}/registry

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn
      - name: Test
        run: yarn test --silent --coverage
        # COMMENTING IT FOR NOW
  # integration-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'yarn'

  #     - name: Install dependencies
  #       run: yarn
  #     - name: Test
  #       run: yarn test:intg:docker

  prisma-migrate:
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn
      - name: Show migrate status
        continue-on-error: true
        run: yarn prisma migrate status

      - name: Deploy migration
        run: yarn prisma migrate deploy

      - name: Seed
        run: yarn seed
  build:
    runs-on: ubuntu-latest
    needs: [unit-tests, prisma-migrate]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build
      # - run: yarn test
