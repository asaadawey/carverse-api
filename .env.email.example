# Email Configuration Examples
# Add these to your .env file

# ========================================
# EMAIL SERVICE CONFIGURATION
# ========================================

# Option 1: Gmail SMTP (Recommended for Development)
# You need to generate an "App Password" for your Gmail account
# Visit: https://support.google.com/accounts/answer/185833
EMAIL_SERVICE=gmail
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
EMAIL_FROM_NAME=CarWash Service
EMAIL_FROM_ADDRESS=your-email@gmail.com

# Option 2: Custom SMTP (e.g., SendGrid, Mailgun, etc.)
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_SECURE=false
# EMAIL_USER=apikey
# EMAIL_PASSWORD=your-sendgrid-api-key
# EMAIL_FROM_NAME=CarWash Service
# EMAIL_FROM_ADDRESS=noreply@yourapp.com

# Option 3: AWS SES
# EMAIL_HOST=email-smtp.us-east-1.amazonaws.com
# EMAIL_PORT=587
# EMAIL_SECURE=false
# EMAIL_USER=your-aws-smtp-username
# EMAIL_PASSWORD=your-aws-smtp-password
# EMAIL_FROM_NAME=CarWash Service
# EMAIL_FROM_ADDRESS=noreply@yourapp.com

# ========================================
# SETUP INSTRUCTIONS
# ========================================

# 1. For Gmail (Easiest for development):
#    - Enable 2-factor authentication on your Gmail account
#    - Generate an "App Password": https://support.google.com/accounts/answer/185833
#    - Use your Gmail address as EMAIL_USER
#    - Use the generated app password as EMAIL_PASSWORD

# 2. For SendGrid (Recommended for production):
#    - Sign up at https://sendgrid.com/
#    - Create an API key with Mail Send permissions
#    - Use 'apikey' as EMAIL_USER
#    - Use your API key as EMAIL_PASSWORD

# 3. For Mailgun (Alternative production solution):
#    - Sign up at https://www.mailgun.com/
#    - Get your SMTP credentials from the dashboard
#    - Use the provided SMTP settings

# 4. For AWS SES (Enterprise solution):
#    - Set up AWS SES in your AWS account
#    - Verify your domain/email addresses
#    - Create SMTP credentials
#    - Use the provided SMTP settings

# ========================================
# TESTING
# ========================================

# For development/testing without email setup:
# - Leave email variables empty or unset
# - OTPs will be logged to console instead of sent via email
# - This allows you to test the OTP flow without email configuration

# Example logged output:
# [WARN] Email service not configured. OTP logged for development: {
#   "to": "user@example.com",
#   "type": "PASSWORD_RESET",
#   "otp": "123456",
#   "subject": "Password Reset OTP - CarWash Service"
# }
